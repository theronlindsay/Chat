# Nginx configuration for integrating Ollama API with your main website
# This configuration adds Ollama API endpoints to your main theronlindsay.dev site

server {
    listen 443 ssl http2;
    server_name theronlindsay.dev;
    
    # Your existing SSL configuration
    ssl_certificate /path/to/your/cert.pem;
    ssl_certificate_key /path/to/your/private.key;
    
    # Main website location (your existing configuration)
    location / {
        # Your existing website configuration goes here
        # This could be serving static files, proxying to another service, etc.
        root /var/www/theronlindsay.dev;
        index index.html;
        try_files $uri $uri/ =404;
    }
    
    # Chat application location
    location /Chat {
        # Serve your built SvelteKit app
        alias /var/www/theronlindsay.dev/Chat;
        try_files $uri $uri/ /Chat/index.html;
    }
    
    # Ollama API proxy - accessible at theronlindsay.dev/api/ollama/
    location /api/ollama/ {
        # Remove /api/ollama prefix and proxy to local Ollama
        rewrite ^/api/ollama/(.*) /$1 break;
        proxy_pass http://127.0.0.1:11434;
        
        # CORS headers for web browser access
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
        add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Accept, Authorization, X-Requested-With' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        
        # Handle preflight OPTIONS requests
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
            add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Accept, Authorization, X-Requested-With' always;
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }
        
        # Proxy settings
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Important for streaming responses
        proxy_buffering off;
        proxy_cache off;
        proxy_read_timeout 86400;
        proxy_send_timeout 86400;
        
        # WebSocket support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }
    
    # Alternative: Direct port-based access (if you prefer this approach)
    # Uncomment this section if you want to allow direct access to port 11434
    # location /ollama/ {
    #     rewrite ^/ollama/(.*) /$1 break;
    #     proxy_pass http://127.0.0.1:11434;
    #     # ... same proxy settings as above
    # }
}

# Redirect HTTP to HTTPS
server {
    listen 80;
    server_name theronlindsay.dev;
    return 301 https://$server_name$request_uri;
}

# Optional: Keep the subdomain configuration as a fallback
server {
    listen 443 ssl http2;
    server_name ollama.theronlindsay.dev;
    
    ssl_certificate /path/to/your/cert.pem;
    ssl_certificate_key /path/to/your/private.key;
    
    # Simple proxy to local Ollama
    location / {
        proxy_pass http://127.0.0.1:11434;
        
        # CORS headers
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
        add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Accept, Authorization, X-Requested-With' always;
        
        # Handle preflight
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
            add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Accept, Authorization, X-Requested-With' always;
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }
        
        # Proxy settings
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_buffering off;
        proxy_cache off;
        proxy_read_timeout 86400;
        proxy_send_timeout 86400;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }
}
